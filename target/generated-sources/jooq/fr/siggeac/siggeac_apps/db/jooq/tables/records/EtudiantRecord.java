/*
 * This file is generated by jOOQ.
 */
package fr.siggeac.siggeac_apps.db.jooq.tables.records;


import fr.siggeac.siggeac_apps.db.jooq.tables.Etudiant;

import java.time.LocalDate;
import java.time.OffsetDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EtudiantRecord extends UpdatableRecordImpl<EtudiantRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>etudiant.etudiant.id_etudiant</code>.
     */
    public void setIdEtudiant(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>etudiant.etudiant.id_etudiant</code>.
     */
    public Integer getIdEtudiant() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>etudiant.etudiant.id_personne</code>.
     */
    public void setIdPersonne(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>etudiant.etudiant.id_personne</code>.
     */
    public Integer getIdPersonne() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>etudiant.etudiant.matricule</code>.
     */
    public void setMatricule(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>etudiant.etudiant.matricule</code>.
     */
    public String getMatricule() {
        return (String) get(2);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setStatut(Object value) {
        set(3, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getStatut() {
        return get(3);
    }

    /**
     * Setter for <code>etudiant.etudiant.date_inscription</code>.
     */
    public void setDateInscription(LocalDate value) {
        set(4, value);
    }

    /**
     * Getter for <code>etudiant.etudiant.date_inscription</code>.
     */
    public LocalDate getDateInscription() {
        return (LocalDate) get(4);
    }

    /**
     * Setter for <code>etudiant.etudiant.filiere</code>.
     */
    public void setFiliere(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>etudiant.etudiant.filiere</code>.
     */
    public String getFiliere() {
        return (String) get(5);
    }

    /**
     * Setter for <code>etudiant.etudiant.niveau</code>.
     */
    public void setNiveau(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>etudiant.etudiant.niveau</code>.
     */
    public Integer getNiveau() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>etudiant.etudiant.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>etudiant.etudiant.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(7);
    }

    /**
     * Setter for <code>etudiant.etudiant.updated_at</code>.
     */
    public void setUpdatedAt(OffsetDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>etudiant.etudiant.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EtudiantRecord
     */
    public EtudiantRecord() {
        super(Etudiant.ETUDIANT_);
    }

    /**
     * Create a detached, initialised EtudiantRecord
     */
    public EtudiantRecord(Integer idEtudiant, Integer idPersonne, String matricule, Object statut, LocalDate dateInscription, String filiere, Integer niveau, OffsetDateTime createdAt, OffsetDateTime updatedAt) {
        super(Etudiant.ETUDIANT_);

        setIdEtudiant(idEtudiant);
        setIdPersonne(idPersonne);
        setMatricule(matricule);
        setStatut(statut);
        setDateInscription(dateInscription);
        setFiliere(filiere);
        setNiveau(niveau);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetTouchedOnNotNull();
    }
}
