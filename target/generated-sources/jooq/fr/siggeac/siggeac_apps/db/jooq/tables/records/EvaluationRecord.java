/*
 * This file is generated by jOOQ.
 */
package fr.siggeac.siggeac_apps.db.jooq.tables.records;


import fr.siggeac.siggeac_apps.db.jooq.tables.Evaluation;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.OffsetDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EvaluationRecord extends UpdatableRecordImpl<EvaluationRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>etudiant.evaluation.id_evaluation</code>.
     */
    public void setIdEvaluation(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>etudiant.evaluation.id_evaluation</code>.
     */
    public Integer getIdEvaluation() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>etudiant.evaluation.id_etudiant</code>.
     */
    public void setIdEtudiant(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>etudiant.evaluation.id_etudiant</code>.
     */
    public Integer getIdEtudiant() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>etudiant.evaluation.id_cours</code>.
     */
    public void setIdCours(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>etudiant.evaluation.id_cours</code>.
     */
    public Integer getIdCours() {
        return (Integer) get(2);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setTypeEvaluation(Object value) {
        set(3, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getTypeEvaluation() {
        return get(3);
    }

    /**
     * Setter for <code>etudiant.evaluation.date_evaluation</code>.
     */
    public void setDateEvaluation(LocalDate value) {
        set(4, value);
    }

    /**
     * Getter for <code>etudiant.evaluation.date_evaluation</code>.
     */
    public LocalDate getDateEvaluation() {
        return (LocalDate) get(4);
    }

    /**
     * Setter for <code>etudiant.evaluation.note</code>.
     */
    public void setNote(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>etudiant.evaluation.note</code>.
     */
    public BigDecimal getNote() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>etudiant.evaluation.coefficient</code>.
     */
    public void setCoefficient(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>etudiant.evaluation.coefficient</code>.
     */
    public BigDecimal getCoefficient() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>etudiant.evaluation.observations</code>.
     */
    public void setObservations(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>etudiant.evaluation.observations</code>.
     */
    public String getObservations() {
        return (String) get(7);
    }

    /**
     * Setter for <code>etudiant.evaluation.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>etudiant.evaluation.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(8);
    }

    /**
     * Setter for <code>etudiant.evaluation.updated_at</code>.
     */
    public void setUpdatedAt(OffsetDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>etudiant.evaluation.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EvaluationRecord
     */
    public EvaluationRecord() {
        super(Evaluation.EVALUATION);
    }

    /**
     * Create a detached, initialised EvaluationRecord
     */
    public EvaluationRecord(Integer idEvaluation, Integer idEtudiant, Integer idCours, Object typeEvaluation, LocalDate dateEvaluation, BigDecimal note, BigDecimal coefficient, String observations, OffsetDateTime createdAt, OffsetDateTime updatedAt) {
        super(Evaluation.EVALUATION);

        setIdEvaluation(idEvaluation);
        setIdEtudiant(idEtudiant);
        setIdCours(idCours);
        setTypeEvaluation(typeEvaluation);
        setDateEvaluation(dateEvaluation);
        setNote(note);
        setCoefficient(coefficient);
        setObservations(observations);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetTouchedOnNotNull();
    }
}
